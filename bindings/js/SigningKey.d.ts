// generated by diplomat-tool
import type { DojoError } from "./DojoError"
import type { FieldElement } from "./FieldElement"
import type { Signature } from "./Signature"
import type { VerifyingKey } from "./VerifyingKey"
import type { pointer, codepoint } from "./diplomat-runtime.d.ts";



/**
 * Represents a signing key for Starknet transactions
 */
export class SigningKey {
    /** @internal */
    get ffiValue(): pointer;
    /** @internal */
    constructor();


    /**
     * Creates a new signing key from a secret scalar
     */
    static new_(secretScalar: string): SigningKey;

    /**
     * Generates a new random signing key
     */
    static fromRandom(): SigningKey;

    /**
     * Returns the secret scalar of the signing key
     */
    secretScalar(): string;

    /**
     * Signs a message hash
     */
    sign(hash: FieldElement): Signature;

    /**
     * Returns the verifying key
     */
    verifyingKey(): VerifyingKey;
}