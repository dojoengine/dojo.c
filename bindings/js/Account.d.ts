// generated by diplomat-tool
import type { CallList } from "./CallList"
import type { DojoError } from "./DojoError"
import type { FieldElement } from "./FieldElement"
import type { Provider } from "./Provider"
import type { SigningKey } from "./SigningKey"
import type { pointer, codepoint } from "./diplomat-runtime.d.ts";



/**
 * Starknet account for signing and executing transactions
 */
export class Account {
    /** @internal */
    get ffiValue(): pointer;
    /** @internal */
    constructor();


    /**
     * Creates a new account
     */
    static new_(provider: Provider, signer: SigningKey, address: FieldElement, chainId: FieldElement): Account;

    /**
     * Gets the account address
     */
    address(): string;

    /**
     * Gets the chain ID
     */
    chainId(): string;

    /**
     * Executes a transaction with the given calls
     */
    execute(calls: CallList): string;

    /**
     * Gets the nonce for the account
     */
    nonce(): bigint;
}