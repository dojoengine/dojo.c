// generated by diplomat-tool
import wasm from "./diplomat-wasm.mjs";
import * as diplomatRuntime from "./diplomat-runtime.mjs";



/**
 * Type of primitive
 */
export class PrimitiveType {
    #value = undefined;

    static #values = new Map([
        ["I8", 0],
        ["I16", 1],
        ["I32", 2],
        ["I64", 3],
        ["I128", 4],
        ["U8", 5],
        ["U16", 6],
        ["U32", 7],
        ["U64", 8],
        ["U128", 9],
        ["U256", 10],
        ["Bool", 11],
        ["Felt252", 12],
        ["ClassHash", 13],
        ["ContractAddress", 14],
        ["EthAddress", 15]
    ]);

    static getAllEntries() {
        return PrimitiveType.#values.entries();
    }

    #internalConstructor(value) {
        if (arguments.length > 1 && arguments[0] === diplomatRuntime.internalConstructor) {
            // We pass in two internalConstructor arguments to create *new*
            // instances of this type, otherwise the enums are treated as singletons.
            if (arguments[1] === diplomatRuntime.internalConstructor ) {
                this.#value = arguments[2];
                return this;
            }
            return PrimitiveType.#objectValues[arguments[1]];
        }

        if (value instanceof PrimitiveType) {
            return value;
        }

        let intVal = PrimitiveType.#values.get(value);

        // Nullish check, checks for null or undefined
        if (intVal != null) {
            return PrimitiveType.#objectValues[intVal];
        }

        throw TypeError(value + " is not a PrimitiveType and does not correspond to any of its enumerator values.");
    }

    /** @internal */
    static fromValue(value) {
        return new PrimitiveType(value);
    }

    get value(){
        return [...PrimitiveType.#values.keys()][this.#value];
    }

    /** @internal */
    get ffiValue(){
        return this.#value;
    }
    static #objectValues = [
        new PrimitiveType(diplomatRuntime.internalConstructor, diplomatRuntime.internalConstructor, 0),
        new PrimitiveType(diplomatRuntime.internalConstructor, diplomatRuntime.internalConstructor, 1),
        new PrimitiveType(diplomatRuntime.internalConstructor, diplomatRuntime.internalConstructor, 2),
        new PrimitiveType(diplomatRuntime.internalConstructor, diplomatRuntime.internalConstructor, 3),
        new PrimitiveType(diplomatRuntime.internalConstructor, diplomatRuntime.internalConstructor, 4),
        new PrimitiveType(diplomatRuntime.internalConstructor, diplomatRuntime.internalConstructor, 5),
        new PrimitiveType(diplomatRuntime.internalConstructor, diplomatRuntime.internalConstructor, 6),
        new PrimitiveType(diplomatRuntime.internalConstructor, diplomatRuntime.internalConstructor, 7),
        new PrimitiveType(diplomatRuntime.internalConstructor, diplomatRuntime.internalConstructor, 8),
        new PrimitiveType(diplomatRuntime.internalConstructor, diplomatRuntime.internalConstructor, 9),
        new PrimitiveType(diplomatRuntime.internalConstructor, diplomatRuntime.internalConstructor, 10),
        new PrimitiveType(diplomatRuntime.internalConstructor, diplomatRuntime.internalConstructor, 11),
        new PrimitiveType(diplomatRuntime.internalConstructor, diplomatRuntime.internalConstructor, 12),
        new PrimitiveType(diplomatRuntime.internalConstructor, diplomatRuntime.internalConstructor, 13),
        new PrimitiveType(diplomatRuntime.internalConstructor, diplomatRuntime.internalConstructor, 14),
        new PrimitiveType(diplomatRuntime.internalConstructor, diplomatRuntime.internalConstructor, 15),
    ];

    static I8 = PrimitiveType.#objectValues[0];
    static I16 = PrimitiveType.#objectValues[1];
    static I32 = PrimitiveType.#objectValues[2];
    static I64 = PrimitiveType.#objectValues[3];
    static I128 = PrimitiveType.#objectValues[4];
    static U8 = PrimitiveType.#objectValues[5];
    static U16 = PrimitiveType.#objectValues[6];
    static U32 = PrimitiveType.#objectValues[7];
    static U64 = PrimitiveType.#objectValues[8];
    static U128 = PrimitiveType.#objectValues[9];
    static U256 = PrimitiveType.#objectValues[10];
    static Bool = PrimitiveType.#objectValues[11];
    static Felt252 = PrimitiveType.#objectValues[12];
    static ClassHash = PrimitiveType.#objectValues[13];
    static ContractAddress = PrimitiveType.#objectValues[14];
    static EthAddress = PrimitiveType.#objectValues[15];


    constructor(value) {
        return this.#internalConstructor(...arguments)
    }
}