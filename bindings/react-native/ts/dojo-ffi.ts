// This file was autogenerated by some hot garbage in the `uniffi-bindgen-react-native` crate.
// Trust me, you don't want to mess with it!

/* tslint:disable */
/* eslint-disable */
// @ts-nocheck

import {
  type StructuralEquality as UniffiStructuralEquality,
  type UniffiForeignFuture as RuntimeUniffiForeignFuture,
  type UniffiRustCallStatus,
  type UniffiRustArcPtr,
  type UniffiRustFutureContinuationCallback as RuntimeUniffiRustFutureContinuationCallback,
  type UniffiResult,
 } from 'uniffi-bindgen-react-native';

interface NativeModuleInterface {
    ubrn_uniffi_internal_fn_func_ffi__string_to_byte_length(string: string, uniffi_out_err: UniffiRustCallStatus): number;
    ubrn_uniffi_internal_fn_func_ffi__string_to_arraybuffer(string: string, uniffi_out_err: UniffiRustCallStatus): Uint8Array;
    ubrn_uniffi_internal_fn_func_ffi__arraybuffer_to_string(buffer: Uint8Array, uniffi_out_err: UniffiRustCallStatus): string;
    ubrn_uniffi_dojo_uniffi_fn_clone_toriiclient(handle: bigint, uniffi_out_err: UniffiRustCallStatus): bigint;
    ubrn_uniffi_dojo_uniffi_fn_free_toriiclient(handle: bigint, uniffi_out_err: UniffiRustCallStatus): void;
    ubrn_uniffi_dojo_uniffi_fn_constructor_toriiclient_new(toriiUrl: Uint8Array, uniffi_out_err: UniffiRustCallStatus): bigint;
    ubrn_uniffi_dojo_uniffi_fn_constructor_toriiclient_new_with_config(toriiUrl: Uint8Array, maxMessageSize: bigint, uniffi_out_err: UniffiRustCallStatus): bigint;
    ubrn_uniffi_dojo_uniffi_fn_method_toriiclient_achievements(ptr: bigint, query: Uint8Array, uniffi_out_err: UniffiRustCallStatus): Uint8Array;
    ubrn_uniffi_dojo_uniffi_fn_method_toriiclient_activities(ptr: bigint, query: Uint8Array, uniffi_out_err: UniffiRustCallStatus): Uint8Array;
    ubrn_uniffi_dojo_uniffi_fn_method_toriiclient_aggregations(ptr: bigint, query: Uint8Array, uniffi_out_err: UniffiRustCallStatus): Uint8Array;
    ubrn_uniffi_dojo_uniffi_fn_method_toriiclient_cancel_subscription(ptr: bigint, subscriptionId: bigint, uniffi_out_err: UniffiRustCallStatus): void;
    ubrn_uniffi_dojo_uniffi_fn_method_toriiclient_contracts(ptr: bigint, query: Uint8Array, uniffi_out_err: UniffiRustCallStatus): Uint8Array;
    ubrn_uniffi_dojo_uniffi_fn_method_toriiclient_controllers(ptr: bigint, query: Uint8Array, uniffi_out_err: UniffiRustCallStatus): Uint8Array;
    ubrn_uniffi_dojo_uniffi_fn_method_toriiclient_entities(ptr: bigint, query: Uint8Array, uniffi_out_err: UniffiRustCallStatus): Uint8Array;
    ubrn_uniffi_dojo_uniffi_fn_method_toriiclient_event_messages(ptr: bigint, query: Uint8Array, uniffi_out_err: UniffiRustCallStatus): Uint8Array;
    ubrn_uniffi_dojo_uniffi_fn_method_toriiclient_player_achievements(ptr: bigint, query: Uint8Array, uniffi_out_err: UniffiRustCallStatus): Uint8Array;
    ubrn_uniffi_dojo_uniffi_fn_method_toriiclient_publish_message(ptr: bigint, message: Uint8Array, uniffi_out_err: UniffiRustCallStatus): Uint8Array;
    ubrn_uniffi_dojo_uniffi_fn_method_toriiclient_publish_message_batch(ptr: bigint, messages: Uint8Array, uniffi_out_err: UniffiRustCallStatus): Uint8Array;
    ubrn_uniffi_dojo_uniffi_fn_method_toriiclient_sql(ptr: bigint, query: Uint8Array, uniffi_out_err: UniffiRustCallStatus): Uint8Array;
    ubrn_uniffi_dojo_uniffi_fn_method_toriiclient_starknet_events(ptr: bigint, query: Uint8Array, uniffi_out_err: UniffiRustCallStatus): Uint8Array;
    ubrn_uniffi_dojo_uniffi_fn_method_toriiclient_subscribe_entity_updates(ptr: bigint, clause: Uint8Array, worldAddresses: Uint8Array, callback: bigint, uniffi_out_err: UniffiRustCallStatus): bigint;
    ubrn_uniffi_dojo_uniffi_fn_method_toriiclient_subscribe_event_updates(ptr: bigint, keys: Uint8Array, callback: bigint, uniffi_out_err: UniffiRustCallStatus): bigint;
    ubrn_uniffi_dojo_uniffi_fn_method_toriiclient_subscribe_token_balance_updates(ptr: bigint, contractAddresses: Uint8Array, accountAddresses: Uint8Array, tokenIds: Uint8Array, callback: bigint, uniffi_out_err: UniffiRustCallStatus): bigint;
    ubrn_uniffi_dojo_uniffi_fn_method_toriiclient_subscribe_token_updates(ptr: bigint, contractAddresses: Uint8Array, tokenIds: Uint8Array, callback: bigint, uniffi_out_err: UniffiRustCallStatus): bigint;
    ubrn_uniffi_dojo_uniffi_fn_method_toriiclient_subscribe_transaction_updates(ptr: bigint, filter: Uint8Array, callback: bigint, uniffi_out_err: UniffiRustCallStatus): bigint;
    ubrn_uniffi_dojo_uniffi_fn_method_toriiclient_token_balances(ptr: bigint, query: Uint8Array, uniffi_out_err: UniffiRustCallStatus): Uint8Array;
    ubrn_uniffi_dojo_uniffi_fn_method_toriiclient_token_contracts(ptr: bigint, query: Uint8Array, uniffi_out_err: UniffiRustCallStatus): Uint8Array;
    ubrn_uniffi_dojo_uniffi_fn_method_toriiclient_token_transfers(ptr: bigint, query: Uint8Array, uniffi_out_err: UniffiRustCallStatus): Uint8Array;
    ubrn_uniffi_dojo_uniffi_fn_method_toriiclient_tokens(ptr: bigint, query: Uint8Array, uniffi_out_err: UniffiRustCallStatus): Uint8Array;
    ubrn_uniffi_dojo_uniffi_fn_method_toriiclient_transactions(ptr: bigint, query: Uint8Array, uniffi_out_err: UniffiRustCallStatus): Uint8Array;
    ubrn_uniffi_dojo_uniffi_fn_method_toriiclient_worlds(ptr: bigint, worldAddresses: Uint8Array, uniffi_out_err: UniffiRustCallStatus): Uint8Array;
    ubrn_uniffi_dojo_uniffi_fn_init_callback_vtable_entityupdatecallback(vtable: UniffiVTableCallbackInterfaceEntityUpdateCallback): void;
    ubrn_uniffi_dojo_uniffi_fn_init_callback_vtable_eventupdatecallback(vtable: UniffiVTableCallbackInterfaceEventUpdateCallback): void;
    ubrn_uniffi_dojo_uniffi_fn_init_callback_vtable_tokenbalanceupdatecallback(vtable: UniffiVTableCallbackInterfaceTokenBalanceUpdateCallback): void;
    ubrn_uniffi_dojo_uniffi_fn_init_callback_vtable_tokenupdatecallback(vtable: UniffiVTableCallbackInterfaceTokenUpdateCallback): void;
    ubrn_uniffi_dojo_uniffi_fn_init_callback_vtable_transactionupdatecallback(vtable: UniffiVTableCallbackInterfaceTransactionUpdateCallback): void;
    ubrn_uniffi_dojo_uniffi_checksum_method_toriiclient_achievements(): number;
    ubrn_uniffi_dojo_uniffi_checksum_method_toriiclient_activities(): number;
    ubrn_uniffi_dojo_uniffi_checksum_method_toriiclient_aggregations(): number;
    ubrn_uniffi_dojo_uniffi_checksum_method_toriiclient_cancel_subscription(): number;
    ubrn_uniffi_dojo_uniffi_checksum_method_toriiclient_contracts(): number;
    ubrn_uniffi_dojo_uniffi_checksum_method_toriiclient_controllers(): number;
    ubrn_uniffi_dojo_uniffi_checksum_method_toriiclient_entities(): number;
    ubrn_uniffi_dojo_uniffi_checksum_method_toriiclient_event_messages(): number;
    ubrn_uniffi_dojo_uniffi_checksum_method_toriiclient_player_achievements(): number;
    ubrn_uniffi_dojo_uniffi_checksum_method_toriiclient_publish_message(): number;
    ubrn_uniffi_dojo_uniffi_checksum_method_toriiclient_publish_message_batch(): number;
    ubrn_uniffi_dojo_uniffi_checksum_method_toriiclient_sql(): number;
    ubrn_uniffi_dojo_uniffi_checksum_method_toriiclient_starknet_events(): number;
    ubrn_uniffi_dojo_uniffi_checksum_method_toriiclient_subscribe_entity_updates(): number;
    ubrn_uniffi_dojo_uniffi_checksum_method_toriiclient_subscribe_event_updates(): number;
    ubrn_uniffi_dojo_uniffi_checksum_method_toriiclient_subscribe_token_balance_updates(): number;
    ubrn_uniffi_dojo_uniffi_checksum_method_toriiclient_subscribe_token_updates(): number;
    ubrn_uniffi_dojo_uniffi_checksum_method_toriiclient_subscribe_transaction_updates(): number;
    ubrn_uniffi_dojo_uniffi_checksum_method_toriiclient_token_balances(): number;
    ubrn_uniffi_dojo_uniffi_checksum_method_toriiclient_token_contracts(): number;
    ubrn_uniffi_dojo_uniffi_checksum_method_toriiclient_token_transfers(): number;
    ubrn_uniffi_dojo_uniffi_checksum_method_toriiclient_tokens(): number;
    ubrn_uniffi_dojo_uniffi_checksum_method_toriiclient_transactions(): number;
    ubrn_uniffi_dojo_uniffi_checksum_method_toriiclient_worlds(): number;
    ubrn_uniffi_dojo_uniffi_checksum_constructor_toriiclient_new(): number;
    ubrn_uniffi_dojo_uniffi_checksum_constructor_toriiclient_new_with_config(): number;
    ubrn_uniffi_dojo_uniffi_checksum_method_entityupdatecallback_on_update(): number;
    ubrn_uniffi_dojo_uniffi_checksum_method_entityupdatecallback_on_error(): number;
    ubrn_uniffi_dojo_uniffi_checksum_method_eventupdatecallback_on_update(): number;
    ubrn_uniffi_dojo_uniffi_checksum_method_eventupdatecallback_on_error(): number;
    ubrn_uniffi_dojo_uniffi_checksum_method_tokenbalanceupdatecallback_on_update(): number;
    ubrn_uniffi_dojo_uniffi_checksum_method_tokenbalanceupdatecallback_on_error(): number;
    ubrn_uniffi_dojo_uniffi_checksum_method_tokenupdatecallback_on_update(): number;
    ubrn_uniffi_dojo_uniffi_checksum_method_tokenupdatecallback_on_error(): number;
    ubrn_uniffi_dojo_uniffi_checksum_method_transactionupdatecallback_on_update(): number;
    ubrn_uniffi_dojo_uniffi_checksum_method_transactionupdatecallback_on_error(): number;
    ubrn_ffi_dojo_uniffi_uniffi_contract_version(): number;
    ubrn_ffi_ToriiClient__bless_pointer(uniffi_out_err: UniffiRustCallStatus): void;
}

// Casting globalThis to any allows us to look for `NativeDojo`
// if it was added via JSI.
//
// We use a getter here rather than simply `globalThis.NativeDojo` so that
// if/when the startup sequence isn't just so, an empty value isn't inadvertantly cached.
const getter: () => NativeModuleInterface = () => (globalThis as any).NativeDojo;
export default getter;

// Structs and function types for calling back into Typescript from Rust.
export type UniffiRustFutureContinuationCallback = (data: bigint, pollResult: number) => void;
export type UniffiForeignFutureDroppedCallback = (handle: bigint) => void;
type UniffiCallbackInterfaceFree = (handle: bigint) => void;
type UniffiCallbackInterfaceClone = (handle: bigint) => void;
export type UniffiForeignFutureDroppedCallbackStruct = {
  handle: bigint;
  free: UniffiForeignFutureDroppedCallback;
};
export type UniffiForeignFutureResultU8 = {
  returnValue: number;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteU8 = (callbackData: bigint, result: UniffiForeignFutureResultU8) => void;
export type UniffiForeignFutureResultI8 = {
  returnValue: number;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteI8 = (callbackData: bigint, result: UniffiForeignFutureResultI8) => void;
export type UniffiForeignFutureResultU16 = {
  returnValue: number;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteU16 = (callbackData: bigint, result: UniffiForeignFutureResultU16) => void;
export type UniffiForeignFutureResultI16 = {
  returnValue: number;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteI16 = (callbackData: bigint, result: UniffiForeignFutureResultI16) => void;
export type UniffiForeignFutureResultU32 = {
  returnValue: number;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteU32 = (callbackData: bigint, result: UniffiForeignFutureResultU32) => void;
export type UniffiForeignFutureResultI32 = {
  returnValue: number;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteI32 = (callbackData: bigint, result: UniffiForeignFutureResultI32) => void;
export type UniffiForeignFutureResultU64 = {
  returnValue: bigint;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteU64 = (callbackData: bigint, result: UniffiForeignFutureResultU64) => void;
export type UniffiForeignFutureResultI64 = {
  returnValue: bigint;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteI64 = (callbackData: bigint, result: UniffiForeignFutureResultI64) => void;
export type UniffiForeignFutureResultF32 = {
  returnValue: number;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteF32 = (callbackData: bigint, result: UniffiForeignFutureResultF32) => void;
export type UniffiForeignFutureResultF64 = {
  returnValue: number;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteF64 = (callbackData: bigint, result: UniffiForeignFutureResultF64) => void;
export type UniffiForeignFutureResultRustBuffer = {
  returnValue: Uint8Array;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteRustBuffer = (callbackData: bigint, result: UniffiForeignFutureResultRustBuffer) => void;
export type UniffiForeignFutureResultVoid = {
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteVoid = (callbackData: bigint, result: UniffiForeignFutureResultVoid) => void;
type UniffiCallbackInterfaceEntityUpdateCallbackMethod0 = (uniffiHandle: bigint, entity: Uint8Array) => UniffiResult<void>
;
type UniffiCallbackInterfaceEntityUpdateCallbackMethod1 = (uniffiHandle: bigint, error: Uint8Array) => UniffiResult<void>
;
type UniffiCallbackInterfaceEventUpdateCallbackMethod0 = (uniffiHandle: bigint, event: Uint8Array) => UniffiResult<void>
;
type UniffiCallbackInterfaceEventUpdateCallbackMethod1 = (uniffiHandle: bigint, error: Uint8Array) => UniffiResult<void>
;
type UniffiCallbackInterfaceTokenBalanceUpdateCallbackMethod0 = (uniffiHandle: bigint, balance: Uint8Array) => UniffiResult<void>
;
type UniffiCallbackInterfaceTokenBalanceUpdateCallbackMethod1 = (uniffiHandle: bigint, error: Uint8Array) => UniffiResult<void>
;
type UniffiCallbackInterfaceTokenUpdateCallbackMethod0 = (uniffiHandle: bigint, token: Uint8Array) => UniffiResult<void>
;
type UniffiCallbackInterfaceTokenUpdateCallbackMethod1 = (uniffiHandle: bigint, error: Uint8Array) => UniffiResult<void>
;
type UniffiCallbackInterfaceTransactionUpdateCallbackMethod0 = (uniffiHandle: bigint, transaction: Uint8Array) => UniffiResult<void>
;
type UniffiCallbackInterfaceTransactionUpdateCallbackMethod1 = (uniffiHandle: bigint, error: Uint8Array) => UniffiResult<void>
;
export type UniffiVTableCallbackInterfaceEntityUpdateCallback = {
  uniffiFree: UniffiCallbackInterfaceFree;
  uniffiClone: UniffiCallbackInterfaceClone;
  onUpdate: UniffiCallbackInterfaceEntityUpdateCallbackMethod0;
  onError: UniffiCallbackInterfaceEntityUpdateCallbackMethod1;
};
export type UniffiVTableCallbackInterfaceEventUpdateCallback = {
  uniffiFree: UniffiCallbackInterfaceFree;
  uniffiClone: UniffiCallbackInterfaceClone;
  onUpdate: UniffiCallbackInterfaceEventUpdateCallbackMethod0;
  onError: UniffiCallbackInterfaceEventUpdateCallbackMethod1;
};
export type UniffiVTableCallbackInterfaceTokenBalanceUpdateCallback = {
  uniffiFree: UniffiCallbackInterfaceFree;
  uniffiClone: UniffiCallbackInterfaceClone;
  onUpdate: UniffiCallbackInterfaceTokenBalanceUpdateCallbackMethod0;
  onError: UniffiCallbackInterfaceTokenBalanceUpdateCallbackMethod1;
};
export type UniffiVTableCallbackInterfaceTokenUpdateCallback = {
  uniffiFree: UniffiCallbackInterfaceFree;
  uniffiClone: UniffiCallbackInterfaceClone;
  onUpdate: UniffiCallbackInterfaceTokenUpdateCallbackMethod0;
  onError: UniffiCallbackInterfaceTokenUpdateCallbackMethod1;
};
export type UniffiVTableCallbackInterfaceTransactionUpdateCallback = {
  uniffiFree: UniffiCallbackInterfaceFree;
  uniffiClone: UniffiCallbackInterfaceClone;
  onUpdate: UniffiCallbackInterfaceTransactionUpdateCallbackMethod0;
  onError: UniffiCallbackInterfaceTransactionUpdateCallbackMethod1;
};

// UniffiRustFutureContinuationCallback is generated as part of the component interface's
// ffi_definitions. However, we need it in the runtime.
// We could:
// (a) do some complicated template logic to ensure the declaration is not generated here (possible)
// (b) import the generated declaration into the runtime (m a y b e) or…
// (c) generate the declaration anyway, and use a different declaration in the runtime.
//
// We chose (c) here as the simplest. In addition, we perform a compile time check that
// the two versions of `UniffiRustFutureContinuationCallback` are structurally equivalent.
//
// If you see the error:
// ```
// Type 'true' is not assignable to type 'false'.(2322)
// ```
// Then a new version of uniffi has changed the signature of the callback. Most likely, code in
// `typescript/src/async-rust-call.ts` will need to be changed.
//
// If you see the error:
// ```
// Cannot find name 'UniffiRustFutureContinuationCallback'. Did you mean 'RuntimeUniffiRustFutureContinuationCallback'?(2552)
// ```
// then you may not be using callbacks or promises, and uniffi is now not generating Futures and callbacks.
// You should not generate this if that is the case.
//
// ('You' being the bindings generator maintainer).
const isRustFutureContinuationCallbackTypeCompatible: UniffiStructuralEquality<
  RuntimeUniffiRustFutureContinuationCallback,
  UniffiRustFutureContinuationCallback
> = true;
const isUniffiForeignFutureTypeCompatible: UniffiStructuralEquality<
  RuntimeUniffiForeignFuture,
  UniffiForeignFuture
> = true;