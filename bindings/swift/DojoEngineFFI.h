// This file was autogenerated by some hot garbage in the `uniffi` crate.
// Trust me, you don't want to mess with it!

#pragma once

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

// The following structs are used to implement the lowest level
// of the FFI, and thus useful to multiple uniffied crates.
// We ensure they are declared exactly once, with a header guard, UNIFFI_SHARED_H.
#ifdef UNIFFI_SHARED_H
    // We also try to prevent mixing versions of shared uniffi header structs.
    // If you add anything to the #else block, you must increment the version suffix in UNIFFI_SHARED_HEADER_V4
    #ifndef UNIFFI_SHARED_HEADER_V4
        #error Combining helper code from multiple versions of uniffi is not supported
    #endif // ndef UNIFFI_SHARED_HEADER_V4
#else
#define UNIFFI_SHARED_H
#define UNIFFI_SHARED_HEADER_V4
// ⚠️ Attention: If you change this #else block (ending in `#endif // def UNIFFI_SHARED_H`) you *must* ⚠️
// ⚠️ increment the version suffix in all instances of UNIFFI_SHARED_HEADER_V4 in this file.           ⚠️

typedef struct RustBuffer
{
    uint64_t capacity;
    uint64_t len;
    uint8_t *_Nullable data;
} RustBuffer;

typedef struct ForeignBytes
{
    int32_t len;
    const uint8_t *_Nullable data;
} ForeignBytes;

// Error definitions
typedef struct RustCallStatus {
    int8_t code;
    RustBuffer errorBuf;
} RustCallStatus;

// ⚠️ Attention: If you change this #else block (ending in `#endif // def UNIFFI_SHARED_H`) you *must* ⚠️
// ⚠️ increment the version suffix in all instances of UNIFFI_SHARED_HEADER_V4 in this file.           ⚠️
#endif // def UNIFFI_SHARED_H
#ifndef UNIFFI_FFIDEF_RUST_FUTURE_CONTINUATION_CALLBACK
#define UNIFFI_FFIDEF_RUST_FUTURE_CONTINUATION_CALLBACK
typedef void (*UniffiRustFutureContinuationCallback)(uint64_t, int8_t
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_DROPPED_CALLBACK
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_DROPPED_CALLBACK
typedef void (*UniffiForeignFutureDroppedCallback)(uint64_t
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_FREE
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_FREE
typedef void (*UniffiCallbackInterfaceFree)(uint64_t
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_CLONE
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_CLONE
typedef uint64_t (*UniffiCallbackInterfaceClone)(uint64_t
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_DROPPED_CALLBACK_STRUCT
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_DROPPED_CALLBACK_STRUCT
typedef struct UniffiForeignFutureDroppedCallbackStruct {
    uint64_t handle;
    UniffiForeignFutureDroppedCallback _Nonnull free;
} UniffiForeignFutureDroppedCallbackStruct;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_U8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_U8
typedef struct UniffiForeignFutureResultU8 {
    uint8_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureResultU8;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U8
typedef void (*UniffiForeignFutureCompleteU8)(uint64_t, UniffiForeignFutureResultU8
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_I8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_I8
typedef struct UniffiForeignFutureResultI8 {
    int8_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureResultI8;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I8
typedef void (*UniffiForeignFutureCompleteI8)(uint64_t, UniffiForeignFutureResultI8
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_U16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_U16
typedef struct UniffiForeignFutureResultU16 {
    uint16_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureResultU16;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U16
typedef void (*UniffiForeignFutureCompleteU16)(uint64_t, UniffiForeignFutureResultU16
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_I16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_I16
typedef struct UniffiForeignFutureResultI16 {
    int16_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureResultI16;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I16
typedef void (*UniffiForeignFutureCompleteI16)(uint64_t, UniffiForeignFutureResultI16
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_U32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_U32
typedef struct UniffiForeignFutureResultU32 {
    uint32_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureResultU32;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U32
typedef void (*UniffiForeignFutureCompleteU32)(uint64_t, UniffiForeignFutureResultU32
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_I32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_I32
typedef struct UniffiForeignFutureResultI32 {
    int32_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureResultI32;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I32
typedef void (*UniffiForeignFutureCompleteI32)(uint64_t, UniffiForeignFutureResultI32
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_U64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_U64
typedef struct UniffiForeignFutureResultU64 {
    uint64_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureResultU64;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U64
typedef void (*UniffiForeignFutureCompleteU64)(uint64_t, UniffiForeignFutureResultU64
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_I64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_I64
typedef struct UniffiForeignFutureResultI64 {
    int64_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureResultI64;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I64
typedef void (*UniffiForeignFutureCompleteI64)(uint64_t, UniffiForeignFutureResultI64
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_F32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_F32
typedef struct UniffiForeignFutureResultF32 {
    float returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureResultF32;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F32
typedef void (*UniffiForeignFutureCompleteF32)(uint64_t, UniffiForeignFutureResultF32
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_F64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_F64
typedef struct UniffiForeignFutureResultF64 {
    double returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureResultF64;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F64
typedef void (*UniffiForeignFutureCompleteF64)(uint64_t, UniffiForeignFutureResultF64
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_RUST_BUFFER
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_RUST_BUFFER
typedef struct UniffiForeignFutureResultRustBuffer {
    RustBuffer returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureResultRustBuffer;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_RUST_BUFFER
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_RUST_BUFFER
typedef void (*UniffiForeignFutureCompleteRustBuffer)(uint64_t, UniffiForeignFutureResultRustBuffer
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_VOID
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_RESULT_VOID
typedef struct UniffiForeignFutureResultVoid {
    RustCallStatus callStatus;
} UniffiForeignFutureResultVoid;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_VOID
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_VOID
typedef void (*UniffiForeignFutureCompleteVoid)(uint64_t, UniffiForeignFutureResultVoid
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_ENTITY_UPDATE_CALLBACK_METHOD0
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_ENTITY_UPDATE_CALLBACK_METHOD0
typedef void (*UniffiCallbackInterfaceEntityUpdateCallbackMethod0)(uint64_t, RustBuffer, void* _Nonnull, 
        RustCallStatus *_Nonnull uniffiCallStatus
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_ENTITY_UPDATE_CALLBACK_METHOD1
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_ENTITY_UPDATE_CALLBACK_METHOD1
typedef void (*UniffiCallbackInterfaceEntityUpdateCallbackMethod1)(uint64_t, RustBuffer, void* _Nonnull, 
        RustCallStatus *_Nonnull uniffiCallStatus
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_EVENT_UPDATE_CALLBACK_METHOD0
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_EVENT_UPDATE_CALLBACK_METHOD0
typedef void (*UniffiCallbackInterfaceEventUpdateCallbackMethod0)(uint64_t, RustBuffer, void* _Nonnull, 
        RustCallStatus *_Nonnull uniffiCallStatus
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_EVENT_UPDATE_CALLBACK_METHOD1
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_EVENT_UPDATE_CALLBACK_METHOD1
typedef void (*UniffiCallbackInterfaceEventUpdateCallbackMethod1)(uint64_t, RustBuffer, void* _Nonnull, 
        RustCallStatus *_Nonnull uniffiCallStatus
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_TOKEN_BALANCE_UPDATE_CALLBACK_METHOD0
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_TOKEN_BALANCE_UPDATE_CALLBACK_METHOD0
typedef void (*UniffiCallbackInterfaceTokenBalanceUpdateCallbackMethod0)(uint64_t, RustBuffer, void* _Nonnull, 
        RustCallStatus *_Nonnull uniffiCallStatus
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_TOKEN_BALANCE_UPDATE_CALLBACK_METHOD1
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_TOKEN_BALANCE_UPDATE_CALLBACK_METHOD1
typedef void (*UniffiCallbackInterfaceTokenBalanceUpdateCallbackMethod1)(uint64_t, RustBuffer, void* _Nonnull, 
        RustCallStatus *_Nonnull uniffiCallStatus
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_TOKEN_UPDATE_CALLBACK_METHOD0
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_TOKEN_UPDATE_CALLBACK_METHOD0
typedef void (*UniffiCallbackInterfaceTokenUpdateCallbackMethod0)(uint64_t, RustBuffer, void* _Nonnull, 
        RustCallStatus *_Nonnull uniffiCallStatus
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_TOKEN_UPDATE_CALLBACK_METHOD1
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_TOKEN_UPDATE_CALLBACK_METHOD1
typedef void (*UniffiCallbackInterfaceTokenUpdateCallbackMethod1)(uint64_t, RustBuffer, void* _Nonnull, 
        RustCallStatus *_Nonnull uniffiCallStatus
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_TRANSACTION_UPDATE_CALLBACK_METHOD0
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_TRANSACTION_UPDATE_CALLBACK_METHOD0
typedef void (*UniffiCallbackInterfaceTransactionUpdateCallbackMethod0)(uint64_t, RustBuffer, void* _Nonnull, 
        RustCallStatus *_Nonnull uniffiCallStatus
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_TRANSACTION_UPDATE_CALLBACK_METHOD1
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_TRANSACTION_UPDATE_CALLBACK_METHOD1
typedef void (*UniffiCallbackInterfaceTransactionUpdateCallbackMethod1)(uint64_t, RustBuffer, void* _Nonnull, 
        RustCallStatus *_Nonnull uniffiCallStatus
    );

#endif
#ifndef UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_ENTITY_UPDATE_CALLBACK
#define UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_ENTITY_UPDATE_CALLBACK
typedef struct UniffiVTableCallbackInterfaceEntityUpdateCallback {
    UniffiCallbackInterfaceFree _Nonnull uniffiFree;
    UniffiCallbackInterfaceClone _Nonnull uniffiClone;
    UniffiCallbackInterfaceEntityUpdateCallbackMethod0 _Nonnull onUpdate;
    UniffiCallbackInterfaceEntityUpdateCallbackMethod1 _Nonnull onError;
} UniffiVTableCallbackInterfaceEntityUpdateCallback;

#endif
#ifndef UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_EVENT_UPDATE_CALLBACK
#define UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_EVENT_UPDATE_CALLBACK
typedef struct UniffiVTableCallbackInterfaceEventUpdateCallback {
    UniffiCallbackInterfaceFree _Nonnull uniffiFree;
    UniffiCallbackInterfaceClone _Nonnull uniffiClone;
    UniffiCallbackInterfaceEventUpdateCallbackMethod0 _Nonnull onUpdate;
    UniffiCallbackInterfaceEventUpdateCallbackMethod1 _Nonnull onError;
} UniffiVTableCallbackInterfaceEventUpdateCallback;

#endif
#ifndef UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_TOKEN_BALANCE_UPDATE_CALLBACK
#define UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_TOKEN_BALANCE_UPDATE_CALLBACK
typedef struct UniffiVTableCallbackInterfaceTokenBalanceUpdateCallback {
    UniffiCallbackInterfaceFree _Nonnull uniffiFree;
    UniffiCallbackInterfaceClone _Nonnull uniffiClone;
    UniffiCallbackInterfaceTokenBalanceUpdateCallbackMethod0 _Nonnull onUpdate;
    UniffiCallbackInterfaceTokenBalanceUpdateCallbackMethod1 _Nonnull onError;
} UniffiVTableCallbackInterfaceTokenBalanceUpdateCallback;

#endif
#ifndef UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_TOKEN_UPDATE_CALLBACK
#define UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_TOKEN_UPDATE_CALLBACK
typedef struct UniffiVTableCallbackInterfaceTokenUpdateCallback {
    UniffiCallbackInterfaceFree _Nonnull uniffiFree;
    UniffiCallbackInterfaceClone _Nonnull uniffiClone;
    UniffiCallbackInterfaceTokenUpdateCallbackMethod0 _Nonnull onUpdate;
    UniffiCallbackInterfaceTokenUpdateCallbackMethod1 _Nonnull onError;
} UniffiVTableCallbackInterfaceTokenUpdateCallback;

#endif
#ifndef UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_TRANSACTION_UPDATE_CALLBACK
#define UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_TRANSACTION_UPDATE_CALLBACK
typedef struct UniffiVTableCallbackInterfaceTransactionUpdateCallback {
    UniffiCallbackInterfaceFree _Nonnull uniffiFree;
    UniffiCallbackInterfaceClone _Nonnull uniffiClone;
    UniffiCallbackInterfaceTransactionUpdateCallbackMethod0 _Nonnull onUpdate;
    UniffiCallbackInterfaceTransactionUpdateCallbackMethod1 _Nonnull onError;
} UniffiVTableCallbackInterfaceTransactionUpdateCallback;

#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_CLONE_TORIICLIENT
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_CLONE_TORIICLIENT
uint64_t uniffi_dojo_uniffi_fn_clone_toriiclient(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_FREE_TORIICLIENT
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_FREE_TORIICLIENT
void uniffi_dojo_uniffi_fn_free_toriiclient(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_CONSTRUCTOR_TORIICLIENT_NEW
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_CONSTRUCTOR_TORIICLIENT_NEW
uint64_t uniffi_dojo_uniffi_fn_constructor_toriiclient_new(RustBuffer torii_url
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_CONSTRUCTOR_TORIICLIENT_NEW_WITH_CONFIG
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_CONSTRUCTOR_TORIICLIENT_NEW_WITH_CONFIG
uint64_t uniffi_dojo_uniffi_fn_constructor_toriiclient_new_with_config(RustBuffer torii_url, uint64_t max_message_size
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_ACHIEVEMENTS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_ACHIEVEMENTS
uint64_t uniffi_dojo_uniffi_fn_method_toriiclient_achievements(uint64_t ptr, RustBuffer query
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_ACTIVITIES
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_ACTIVITIES
uint64_t uniffi_dojo_uniffi_fn_method_toriiclient_activities(uint64_t ptr, RustBuffer query
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_AGGREGATIONS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_AGGREGATIONS
uint64_t uniffi_dojo_uniffi_fn_method_toriiclient_aggregations(uint64_t ptr, RustBuffer query
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_CANCEL_SUBSCRIPTION
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_CANCEL_SUBSCRIPTION
void uniffi_dojo_uniffi_fn_method_toriiclient_cancel_subscription(uint64_t ptr, uint64_t subscription_id, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_CONTRACTS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_CONTRACTS
uint64_t uniffi_dojo_uniffi_fn_method_toriiclient_contracts(uint64_t ptr, RustBuffer query
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_CONTROLLERS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_CONTROLLERS
uint64_t uniffi_dojo_uniffi_fn_method_toriiclient_controllers(uint64_t ptr, RustBuffer query
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_ENTITIES
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_ENTITIES
uint64_t uniffi_dojo_uniffi_fn_method_toriiclient_entities(uint64_t ptr, RustBuffer query
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_EVENT_MESSAGES
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_EVENT_MESSAGES
uint64_t uniffi_dojo_uniffi_fn_method_toriiclient_event_messages(uint64_t ptr, RustBuffer query
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_PLAYER_ACHIEVEMENTS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_PLAYER_ACHIEVEMENTS
uint64_t uniffi_dojo_uniffi_fn_method_toriiclient_player_achievements(uint64_t ptr, RustBuffer query
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_PUBLISH_MESSAGE
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_PUBLISH_MESSAGE
uint64_t uniffi_dojo_uniffi_fn_method_toriiclient_publish_message(uint64_t ptr, RustBuffer message
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_PUBLISH_MESSAGE_BATCH
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_PUBLISH_MESSAGE_BATCH
uint64_t uniffi_dojo_uniffi_fn_method_toriiclient_publish_message_batch(uint64_t ptr, RustBuffer messages
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_SQL
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_SQL
uint64_t uniffi_dojo_uniffi_fn_method_toriiclient_sql(uint64_t ptr, RustBuffer query
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_STARKNET_EVENTS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_STARKNET_EVENTS
uint64_t uniffi_dojo_uniffi_fn_method_toriiclient_starknet_events(uint64_t ptr, RustBuffer query
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_SUBSCRIBE_ENTITY_UPDATES
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_SUBSCRIBE_ENTITY_UPDATES
uint64_t uniffi_dojo_uniffi_fn_method_toriiclient_subscribe_entity_updates(uint64_t ptr, RustBuffer clause, RustBuffer world_addresses, uint64_t callback
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_SUBSCRIBE_EVENT_UPDATES
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_SUBSCRIBE_EVENT_UPDATES
uint64_t uniffi_dojo_uniffi_fn_method_toriiclient_subscribe_event_updates(uint64_t ptr, RustBuffer keys, uint64_t callback
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_SUBSCRIBE_TOKEN_BALANCE_UPDATES
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_SUBSCRIBE_TOKEN_BALANCE_UPDATES
uint64_t uniffi_dojo_uniffi_fn_method_toriiclient_subscribe_token_balance_updates(uint64_t ptr, RustBuffer contract_addresses, RustBuffer account_addresses, RustBuffer token_ids, uint64_t callback
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_SUBSCRIBE_TOKEN_UPDATES
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_SUBSCRIBE_TOKEN_UPDATES
uint64_t uniffi_dojo_uniffi_fn_method_toriiclient_subscribe_token_updates(uint64_t ptr, RustBuffer contract_addresses, RustBuffer token_ids, uint64_t callback
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_SUBSCRIBE_TRANSACTION_UPDATES
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_SUBSCRIBE_TRANSACTION_UPDATES
uint64_t uniffi_dojo_uniffi_fn_method_toriiclient_subscribe_transaction_updates(uint64_t ptr, RustBuffer filter, uint64_t callback
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_TOKEN_BALANCES
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_TOKEN_BALANCES
uint64_t uniffi_dojo_uniffi_fn_method_toriiclient_token_balances(uint64_t ptr, RustBuffer query
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_TOKEN_CONTRACTS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_TOKEN_CONTRACTS
uint64_t uniffi_dojo_uniffi_fn_method_toriiclient_token_contracts(uint64_t ptr, RustBuffer query
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_TOKEN_TRANSFERS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_TOKEN_TRANSFERS
uint64_t uniffi_dojo_uniffi_fn_method_toriiclient_token_transfers(uint64_t ptr, RustBuffer query
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_TOKENS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_TOKENS
uint64_t uniffi_dojo_uniffi_fn_method_toriiclient_tokens(uint64_t ptr, RustBuffer query
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_TRANSACTIONS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_TRANSACTIONS
uint64_t uniffi_dojo_uniffi_fn_method_toriiclient_transactions(uint64_t ptr, RustBuffer query
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_WORLDS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_WORLDS
uint64_t uniffi_dojo_uniffi_fn_method_toriiclient_worlds(uint64_t ptr, RustBuffer world_addresses
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_INIT_CALLBACK_VTABLE_ENTITYUPDATECALLBACK
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_INIT_CALLBACK_VTABLE_ENTITYUPDATECALLBACK
void uniffi_dojo_uniffi_fn_init_callback_vtable_entityupdatecallback(const UniffiVTableCallbackInterfaceEntityUpdateCallback* _Nonnull vtable
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_INIT_CALLBACK_VTABLE_EVENTUPDATECALLBACK
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_INIT_CALLBACK_VTABLE_EVENTUPDATECALLBACK
void uniffi_dojo_uniffi_fn_init_callback_vtable_eventupdatecallback(const UniffiVTableCallbackInterfaceEventUpdateCallback* _Nonnull vtable
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_INIT_CALLBACK_VTABLE_TOKENBALANCEUPDATECALLBACK
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_INIT_CALLBACK_VTABLE_TOKENBALANCEUPDATECALLBACK
void uniffi_dojo_uniffi_fn_init_callback_vtable_tokenbalanceupdatecallback(const UniffiVTableCallbackInterfaceTokenBalanceUpdateCallback* _Nonnull vtable
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_INIT_CALLBACK_VTABLE_TOKENUPDATECALLBACK
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_INIT_CALLBACK_VTABLE_TOKENUPDATECALLBACK
void uniffi_dojo_uniffi_fn_init_callback_vtable_tokenupdatecallback(const UniffiVTableCallbackInterfaceTokenUpdateCallback* _Nonnull vtable
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_INIT_CALLBACK_VTABLE_TRANSACTIONUPDATECALLBACK
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_INIT_CALLBACK_VTABLE_TRANSACTIONUPDATECALLBACK
void uniffi_dojo_uniffi_fn_init_callback_vtable_transactionupdatecallback(const UniffiVTableCallbackInterfaceTransactionUpdateCallback* _Nonnull vtable
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUSTBUFFER_ALLOC
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUSTBUFFER_ALLOC
RustBuffer ffi_dojo_uniffi_rustbuffer_alloc(uint64_t size, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUSTBUFFER_FROM_BYTES
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUSTBUFFER_FROM_BYTES
RustBuffer ffi_dojo_uniffi_rustbuffer_from_bytes(ForeignBytes bytes, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUSTBUFFER_FREE
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUSTBUFFER_FREE
void ffi_dojo_uniffi_rustbuffer_free(RustBuffer buf, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUSTBUFFER_RESERVE
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUSTBUFFER_RESERVE
RustBuffer ffi_dojo_uniffi_rustbuffer_reserve(RustBuffer buf, uint64_t additional, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_U8
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_U8
void ffi_dojo_uniffi_rust_future_poll_u8(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_U8
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_U8
void ffi_dojo_uniffi_rust_future_cancel_u8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_U8
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_U8
void ffi_dojo_uniffi_rust_future_free_u8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_U8
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_U8
uint8_t ffi_dojo_uniffi_rust_future_complete_u8(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_I8
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_I8
void ffi_dojo_uniffi_rust_future_poll_i8(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_I8
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_I8
void ffi_dojo_uniffi_rust_future_cancel_i8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_I8
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_I8
void ffi_dojo_uniffi_rust_future_free_i8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_I8
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_I8
int8_t ffi_dojo_uniffi_rust_future_complete_i8(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_U16
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_U16
void ffi_dojo_uniffi_rust_future_poll_u16(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_U16
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_U16
void ffi_dojo_uniffi_rust_future_cancel_u16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_U16
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_U16
void ffi_dojo_uniffi_rust_future_free_u16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_U16
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_U16
uint16_t ffi_dojo_uniffi_rust_future_complete_u16(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_I16
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_I16
void ffi_dojo_uniffi_rust_future_poll_i16(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_I16
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_I16
void ffi_dojo_uniffi_rust_future_cancel_i16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_I16
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_I16
void ffi_dojo_uniffi_rust_future_free_i16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_I16
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_I16
int16_t ffi_dojo_uniffi_rust_future_complete_i16(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_U32
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_U32
void ffi_dojo_uniffi_rust_future_poll_u32(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_U32
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_U32
void ffi_dojo_uniffi_rust_future_cancel_u32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_U32
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_U32
void ffi_dojo_uniffi_rust_future_free_u32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_U32
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_U32
uint32_t ffi_dojo_uniffi_rust_future_complete_u32(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_I32
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_I32
void ffi_dojo_uniffi_rust_future_poll_i32(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_I32
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_I32
void ffi_dojo_uniffi_rust_future_cancel_i32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_I32
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_I32
void ffi_dojo_uniffi_rust_future_free_i32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_I32
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_I32
int32_t ffi_dojo_uniffi_rust_future_complete_i32(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_U64
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_U64
void ffi_dojo_uniffi_rust_future_poll_u64(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_U64
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_U64
void ffi_dojo_uniffi_rust_future_cancel_u64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_U64
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_U64
void ffi_dojo_uniffi_rust_future_free_u64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_U64
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_U64
uint64_t ffi_dojo_uniffi_rust_future_complete_u64(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_I64
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_I64
void ffi_dojo_uniffi_rust_future_poll_i64(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_I64
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_I64
void ffi_dojo_uniffi_rust_future_cancel_i64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_I64
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_I64
void ffi_dojo_uniffi_rust_future_free_i64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_I64
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_I64
int64_t ffi_dojo_uniffi_rust_future_complete_i64(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_F32
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_F32
void ffi_dojo_uniffi_rust_future_poll_f32(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_F32
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_F32
void ffi_dojo_uniffi_rust_future_cancel_f32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_F32
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_F32
void ffi_dojo_uniffi_rust_future_free_f32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_F32
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_F32
float ffi_dojo_uniffi_rust_future_complete_f32(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_F64
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_F64
void ffi_dojo_uniffi_rust_future_poll_f64(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_F64
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_F64
void ffi_dojo_uniffi_rust_future_cancel_f64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_F64
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_F64
void ffi_dojo_uniffi_rust_future_free_f64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_F64
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_F64
double ffi_dojo_uniffi_rust_future_complete_f64(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_RUST_BUFFER
void ffi_dojo_uniffi_rust_future_poll_rust_buffer(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_RUST_BUFFER
void ffi_dojo_uniffi_rust_future_cancel_rust_buffer(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_RUST_BUFFER
void ffi_dojo_uniffi_rust_future_free_rust_buffer(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_RUST_BUFFER
RustBuffer ffi_dojo_uniffi_rust_future_complete_rust_buffer(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_VOID
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_VOID
void ffi_dojo_uniffi_rust_future_poll_void(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_VOID
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_VOID
void ffi_dojo_uniffi_rust_future_cancel_void(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_VOID
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_VOID
void ffi_dojo_uniffi_rust_future_free_void(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_VOID
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_VOID
void ffi_dojo_uniffi_rust_future_complete_void(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_ACHIEVEMENTS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_ACHIEVEMENTS
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_achievements(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_ACTIVITIES
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_ACTIVITIES
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_activities(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_AGGREGATIONS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_AGGREGATIONS
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_aggregations(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_CANCEL_SUBSCRIPTION
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_CANCEL_SUBSCRIPTION
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_cancel_subscription(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_CONTRACTS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_CONTRACTS
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_contracts(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_CONTROLLERS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_CONTROLLERS
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_controllers(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_ENTITIES
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_ENTITIES
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_entities(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_EVENT_MESSAGES
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_EVENT_MESSAGES
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_event_messages(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_PLAYER_ACHIEVEMENTS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_PLAYER_ACHIEVEMENTS
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_player_achievements(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_PUBLISH_MESSAGE
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_PUBLISH_MESSAGE
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_publish_message(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_PUBLISH_MESSAGE_BATCH
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_PUBLISH_MESSAGE_BATCH
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_publish_message_batch(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_SQL
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_SQL
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_sql(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_STARKNET_EVENTS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_STARKNET_EVENTS
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_starknet_events(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_SUBSCRIBE_ENTITY_UPDATES
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_SUBSCRIBE_ENTITY_UPDATES
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_subscribe_entity_updates(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_SUBSCRIBE_EVENT_UPDATES
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_SUBSCRIBE_EVENT_UPDATES
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_subscribe_event_updates(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_SUBSCRIBE_TOKEN_BALANCE_UPDATES
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_SUBSCRIBE_TOKEN_BALANCE_UPDATES
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_subscribe_token_balance_updates(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_SUBSCRIBE_TOKEN_UPDATES
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_SUBSCRIBE_TOKEN_UPDATES
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_subscribe_token_updates(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_SUBSCRIBE_TRANSACTION_UPDATES
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_SUBSCRIBE_TRANSACTION_UPDATES
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_subscribe_transaction_updates(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_TOKEN_BALANCES
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_TOKEN_BALANCES
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_token_balances(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_TOKEN_CONTRACTS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_TOKEN_CONTRACTS
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_token_contracts(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_TOKEN_TRANSFERS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_TOKEN_TRANSFERS
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_token_transfers(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_TOKENS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_TOKENS
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_tokens(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_TRANSACTIONS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_TRANSACTIONS
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_transactions(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_WORLDS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_WORLDS
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_worlds(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_CONSTRUCTOR_TORIICLIENT_NEW
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_CONSTRUCTOR_TORIICLIENT_NEW
uint16_t uniffi_dojo_uniffi_checksum_constructor_toriiclient_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_CONSTRUCTOR_TORIICLIENT_NEW_WITH_CONFIG
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_CONSTRUCTOR_TORIICLIENT_NEW_WITH_CONFIG
uint16_t uniffi_dojo_uniffi_checksum_constructor_toriiclient_new_with_config(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_ENTITYUPDATECALLBACK_ON_UPDATE
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_ENTITYUPDATECALLBACK_ON_UPDATE
uint16_t uniffi_dojo_uniffi_checksum_method_entityupdatecallback_on_update(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_ENTITYUPDATECALLBACK_ON_ERROR
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_ENTITYUPDATECALLBACK_ON_ERROR
uint16_t uniffi_dojo_uniffi_checksum_method_entityupdatecallback_on_error(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_EVENTUPDATECALLBACK_ON_UPDATE
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_EVENTUPDATECALLBACK_ON_UPDATE
uint16_t uniffi_dojo_uniffi_checksum_method_eventupdatecallback_on_update(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_EVENTUPDATECALLBACK_ON_ERROR
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_EVENTUPDATECALLBACK_ON_ERROR
uint16_t uniffi_dojo_uniffi_checksum_method_eventupdatecallback_on_error(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TOKENBALANCEUPDATECALLBACK_ON_UPDATE
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TOKENBALANCEUPDATECALLBACK_ON_UPDATE
uint16_t uniffi_dojo_uniffi_checksum_method_tokenbalanceupdatecallback_on_update(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TOKENBALANCEUPDATECALLBACK_ON_ERROR
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TOKENBALANCEUPDATECALLBACK_ON_ERROR
uint16_t uniffi_dojo_uniffi_checksum_method_tokenbalanceupdatecallback_on_error(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TOKENUPDATECALLBACK_ON_UPDATE
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TOKENUPDATECALLBACK_ON_UPDATE
uint16_t uniffi_dojo_uniffi_checksum_method_tokenupdatecallback_on_update(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TOKENUPDATECALLBACK_ON_ERROR
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TOKENUPDATECALLBACK_ON_ERROR
uint16_t uniffi_dojo_uniffi_checksum_method_tokenupdatecallback_on_error(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TRANSACTIONUPDATECALLBACK_ON_UPDATE
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TRANSACTIONUPDATECALLBACK_ON_UPDATE
uint16_t uniffi_dojo_uniffi_checksum_method_transactionupdatecallback_on_update(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TRANSACTIONUPDATECALLBACK_ON_ERROR
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TRANSACTIONUPDATECALLBACK_ON_ERROR
uint16_t uniffi_dojo_uniffi_checksum_method_transactionupdatecallback_on_error(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_UNIFFI_CONTRACT_VERSION
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_UNIFFI_CONTRACT_VERSION
uint32_t ffi_dojo_uniffi_uniffi_contract_version(void
    
);
#endif

