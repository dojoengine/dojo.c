

// This file was autogenerated by some hot garbage in the `uniffi` crate.
// Trust me, you don't want to mess with it!



#include <stdbool.h>
#include <stdint.h>

// The following structs are used to implement the lowest level
// of the FFI, and thus useful to multiple uniffied crates.
// We ensure they are declared exactly once, with a header guard, UNIFFI_SHARED_H.
#ifdef UNIFFI_SHARED_H
	// We also try to prevent mixing versions of shared uniffi header structs.
	// If you add anything to the #else block, you must increment the version suffix in UNIFFI_SHARED_HEADER_V6
	#ifndef UNIFFI_SHARED_HEADER_V6
		#error Combining helper code from multiple versions of uniffi is not supported
	#endif // ndef UNIFFI_SHARED_HEADER_V6
#else
#define UNIFFI_SHARED_H
#define UNIFFI_SHARED_HEADER_V6
// ⚠️ Attention: If you change this #else block (ending in `#endif // def UNIFFI_SHARED_H`) you *must* ⚠️
// ⚠️ increment the version suffix in all instances of UNIFFI_SHARED_HEADER_V6 in this file.           ⚠️

typedef struct RustBuffer {
	uint64_t capacity;
	uint64_t len;
	uint8_t *data;
} RustBuffer;

typedef struct ForeignBytes {
	int32_t len;
	const uint8_t *data;
} ForeignBytes;

// Error definitions
typedef struct RustCallStatus {
	int8_t code;
	RustBuffer errorBuf;
} RustCallStatus;

#endif // UNIFFI_SHARED_H


#ifndef UNIFFI_FFIDEF_RUST_FUTURE_CONTINUATION_CALLBACK
#define UNIFFI_FFIDEF_RUST_FUTURE_CONTINUATION_CALLBACK
typedef void (*UniffiRustFutureContinuationCallback)(uint64_t data, int8_t poll_result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiRustFutureContinuationCallback(
				UniffiRustFutureContinuationCallback cb, uint64_t data, int8_t poll_result)
{
	return cb(data, poll_result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_FREE
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_FREE
typedef void (*UniffiForeignFutureFree)(uint64_t handle);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureFree(
				UniffiForeignFutureFree cb, uint64_t handle)
{
	return cb(handle);
}


#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_FREE
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_FREE
typedef void (*UniffiCallbackInterfaceFree)(uint64_t handle);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiCallbackInterfaceFree(
				UniffiCallbackInterfaceFree cb, uint64_t handle)
{
	return cb(handle);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE
#define UNIFFI_FFIDEF_FOREIGN_FUTURE
typedef struct UniffiForeignFuture {
    uint64_t handle;
    UniffiForeignFutureFree free;
} UniffiForeignFuture;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U8
typedef struct UniffiForeignFutureStructU8 {
    uint8_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructU8;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U8
typedef void (*UniffiForeignFutureCompleteU8)(uint64_t callback_data, UniffiForeignFutureStructU8 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteU8(
				UniffiForeignFutureCompleteU8 cb, uint64_t callback_data, UniffiForeignFutureStructU8 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I8
typedef struct UniffiForeignFutureStructI8 {
    int8_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructI8;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I8
typedef void (*UniffiForeignFutureCompleteI8)(uint64_t callback_data, UniffiForeignFutureStructI8 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteI8(
				UniffiForeignFutureCompleteI8 cb, uint64_t callback_data, UniffiForeignFutureStructI8 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U16
typedef struct UniffiForeignFutureStructU16 {
    uint16_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructU16;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U16
typedef void (*UniffiForeignFutureCompleteU16)(uint64_t callback_data, UniffiForeignFutureStructU16 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteU16(
				UniffiForeignFutureCompleteU16 cb, uint64_t callback_data, UniffiForeignFutureStructU16 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I16
typedef struct UniffiForeignFutureStructI16 {
    int16_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructI16;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I16
typedef void (*UniffiForeignFutureCompleteI16)(uint64_t callback_data, UniffiForeignFutureStructI16 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteI16(
				UniffiForeignFutureCompleteI16 cb, uint64_t callback_data, UniffiForeignFutureStructI16 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U32
typedef struct UniffiForeignFutureStructU32 {
    uint32_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructU32;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U32
typedef void (*UniffiForeignFutureCompleteU32)(uint64_t callback_data, UniffiForeignFutureStructU32 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteU32(
				UniffiForeignFutureCompleteU32 cb, uint64_t callback_data, UniffiForeignFutureStructU32 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I32
typedef struct UniffiForeignFutureStructI32 {
    int32_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructI32;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I32
typedef void (*UniffiForeignFutureCompleteI32)(uint64_t callback_data, UniffiForeignFutureStructI32 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteI32(
				UniffiForeignFutureCompleteI32 cb, uint64_t callback_data, UniffiForeignFutureStructI32 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U64
typedef struct UniffiForeignFutureStructU64 {
    uint64_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructU64;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U64
typedef void (*UniffiForeignFutureCompleteU64)(uint64_t callback_data, UniffiForeignFutureStructU64 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteU64(
				UniffiForeignFutureCompleteU64 cb, uint64_t callback_data, UniffiForeignFutureStructU64 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I64
typedef struct UniffiForeignFutureStructI64 {
    int64_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructI64;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I64
typedef void (*UniffiForeignFutureCompleteI64)(uint64_t callback_data, UniffiForeignFutureStructI64 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteI64(
				UniffiForeignFutureCompleteI64 cb, uint64_t callback_data, UniffiForeignFutureStructI64 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_F32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_F32
typedef struct UniffiForeignFutureStructF32 {
    float returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructF32;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F32
typedef void (*UniffiForeignFutureCompleteF32)(uint64_t callback_data, UniffiForeignFutureStructF32 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteF32(
				UniffiForeignFutureCompleteF32 cb, uint64_t callback_data, UniffiForeignFutureStructF32 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_F64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_F64
typedef struct UniffiForeignFutureStructF64 {
    double returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructF64;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F64
typedef void (*UniffiForeignFutureCompleteF64)(uint64_t callback_data, UniffiForeignFutureStructF64 result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteF64(
				UniffiForeignFutureCompleteF64 cb, uint64_t callback_data, UniffiForeignFutureStructF64 result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_POINTER
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_POINTER
typedef struct UniffiForeignFutureStructPointer {
    void* returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructPointer;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_POINTER
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_POINTER
typedef void (*UniffiForeignFutureCompletePointer)(uint64_t callback_data, UniffiForeignFutureStructPointer result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompletePointer(
				UniffiForeignFutureCompletePointer cb, uint64_t callback_data, UniffiForeignFutureStructPointer result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_RUST_BUFFER
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_RUST_BUFFER
typedef struct UniffiForeignFutureStructRustBuffer {
    RustBuffer returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructRustBuffer;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_RUST_BUFFER
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_RUST_BUFFER
typedef void (*UniffiForeignFutureCompleteRustBuffer)(uint64_t callback_data, UniffiForeignFutureStructRustBuffer result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteRustBuffer(
				UniffiForeignFutureCompleteRustBuffer cb, uint64_t callback_data, UniffiForeignFutureStructRustBuffer result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_VOID
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_VOID
typedef struct UniffiForeignFutureStructVoid {
    RustCallStatus callStatus;
} UniffiForeignFutureStructVoid;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_VOID
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_VOID
typedef void (*UniffiForeignFutureCompleteVoid)(uint64_t callback_data, UniffiForeignFutureStructVoid result);

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiForeignFutureCompleteVoid(
				UniffiForeignFutureCompleteVoid cb, uint64_t callback_data, UniffiForeignFutureStructVoid result)
{
	return cb(callback_data, result);
}


#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_ENTITY_UPDATE_CALLBACK_METHOD0
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_ENTITY_UPDATE_CALLBACK_METHOD0
typedef void (*UniffiCallbackInterfaceEntityUpdateCallbackMethod0)(uint64_t uniffi_handle, RustBuffer entity, void* uniffi_out_return, RustCallStatus* callStatus );

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiCallbackInterfaceEntityUpdateCallbackMethod0(
				UniffiCallbackInterfaceEntityUpdateCallbackMethod0 cb, uint64_t uniffi_handle, RustBuffer entity, void* uniffi_out_return, RustCallStatus* callStatus )
{
	return cb(uniffi_handle, entity, uniffi_out_return, callStatus );
}


#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_ENTITY_UPDATE_CALLBACK_METHOD1
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_ENTITY_UPDATE_CALLBACK_METHOD1
typedef void (*UniffiCallbackInterfaceEntityUpdateCallbackMethod1)(uint64_t uniffi_handle, RustBuffer error, void* uniffi_out_return, RustCallStatus* callStatus );

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiCallbackInterfaceEntityUpdateCallbackMethod1(
				UniffiCallbackInterfaceEntityUpdateCallbackMethod1 cb, uint64_t uniffi_handle, RustBuffer error, void* uniffi_out_return, RustCallStatus* callStatus )
{
	return cb(uniffi_handle, error, uniffi_out_return, callStatus );
}


#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_EVENT_UPDATE_CALLBACK_METHOD0
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_EVENT_UPDATE_CALLBACK_METHOD0
typedef void (*UniffiCallbackInterfaceEventUpdateCallbackMethod0)(uint64_t uniffi_handle, RustBuffer event, void* uniffi_out_return, RustCallStatus* callStatus );

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiCallbackInterfaceEventUpdateCallbackMethod0(
				UniffiCallbackInterfaceEventUpdateCallbackMethod0 cb, uint64_t uniffi_handle, RustBuffer event, void* uniffi_out_return, RustCallStatus* callStatus )
{
	return cb(uniffi_handle, event, uniffi_out_return, callStatus );
}


#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_EVENT_UPDATE_CALLBACK_METHOD1
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_EVENT_UPDATE_CALLBACK_METHOD1
typedef void (*UniffiCallbackInterfaceEventUpdateCallbackMethod1)(uint64_t uniffi_handle, RustBuffer error, void* uniffi_out_return, RustCallStatus* callStatus );

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiCallbackInterfaceEventUpdateCallbackMethod1(
				UniffiCallbackInterfaceEventUpdateCallbackMethod1 cb, uint64_t uniffi_handle, RustBuffer error, void* uniffi_out_return, RustCallStatus* callStatus )
{
	return cb(uniffi_handle, error, uniffi_out_return, callStatus );
}


#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_TOKEN_BALANCE_UPDATE_CALLBACK_METHOD0
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_TOKEN_BALANCE_UPDATE_CALLBACK_METHOD0
typedef void (*UniffiCallbackInterfaceTokenBalanceUpdateCallbackMethod0)(uint64_t uniffi_handle, RustBuffer balance, void* uniffi_out_return, RustCallStatus* callStatus );

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiCallbackInterfaceTokenBalanceUpdateCallbackMethod0(
				UniffiCallbackInterfaceTokenBalanceUpdateCallbackMethod0 cb, uint64_t uniffi_handle, RustBuffer balance, void* uniffi_out_return, RustCallStatus* callStatus )
{
	return cb(uniffi_handle, balance, uniffi_out_return, callStatus );
}


#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_TOKEN_BALANCE_UPDATE_CALLBACK_METHOD1
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_TOKEN_BALANCE_UPDATE_CALLBACK_METHOD1
typedef void (*UniffiCallbackInterfaceTokenBalanceUpdateCallbackMethod1)(uint64_t uniffi_handle, RustBuffer error, void* uniffi_out_return, RustCallStatus* callStatus );

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiCallbackInterfaceTokenBalanceUpdateCallbackMethod1(
				UniffiCallbackInterfaceTokenBalanceUpdateCallbackMethod1 cb, uint64_t uniffi_handle, RustBuffer error, void* uniffi_out_return, RustCallStatus* callStatus )
{
	return cb(uniffi_handle, error, uniffi_out_return, callStatus );
}


#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_TOKEN_UPDATE_CALLBACK_METHOD0
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_TOKEN_UPDATE_CALLBACK_METHOD0
typedef void (*UniffiCallbackInterfaceTokenUpdateCallbackMethod0)(uint64_t uniffi_handle, RustBuffer token, void* uniffi_out_return, RustCallStatus* callStatus );

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiCallbackInterfaceTokenUpdateCallbackMethod0(
				UniffiCallbackInterfaceTokenUpdateCallbackMethod0 cb, uint64_t uniffi_handle, RustBuffer token, void* uniffi_out_return, RustCallStatus* callStatus )
{
	return cb(uniffi_handle, token, uniffi_out_return, callStatus );
}


#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_TOKEN_UPDATE_CALLBACK_METHOD1
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_TOKEN_UPDATE_CALLBACK_METHOD1
typedef void (*UniffiCallbackInterfaceTokenUpdateCallbackMethod1)(uint64_t uniffi_handle, RustBuffer error, void* uniffi_out_return, RustCallStatus* callStatus );

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiCallbackInterfaceTokenUpdateCallbackMethod1(
				UniffiCallbackInterfaceTokenUpdateCallbackMethod1 cb, uint64_t uniffi_handle, RustBuffer error, void* uniffi_out_return, RustCallStatus* callStatus )
{
	return cb(uniffi_handle, error, uniffi_out_return, callStatus );
}


#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_TRANSACTION_UPDATE_CALLBACK_METHOD0
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_TRANSACTION_UPDATE_CALLBACK_METHOD0
typedef void (*UniffiCallbackInterfaceTransactionUpdateCallbackMethod0)(uint64_t uniffi_handle, RustBuffer transaction, void* uniffi_out_return, RustCallStatus* callStatus );

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiCallbackInterfaceTransactionUpdateCallbackMethod0(
				UniffiCallbackInterfaceTransactionUpdateCallbackMethod0 cb, uint64_t uniffi_handle, RustBuffer transaction, void* uniffi_out_return, RustCallStatus* callStatus )
{
	return cb(uniffi_handle, transaction, uniffi_out_return, callStatus );
}


#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_TRANSACTION_UPDATE_CALLBACK_METHOD1
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_TRANSACTION_UPDATE_CALLBACK_METHOD1
typedef void (*UniffiCallbackInterfaceTransactionUpdateCallbackMethod1)(uint64_t uniffi_handle, RustBuffer error, void* uniffi_out_return, RustCallStatus* callStatus );

// Making function static works arround:
// https://github.com/golang/go/issues/11263
static void call_UniffiCallbackInterfaceTransactionUpdateCallbackMethod1(
				UniffiCallbackInterfaceTransactionUpdateCallbackMethod1 cb, uint64_t uniffi_handle, RustBuffer error, void* uniffi_out_return, RustCallStatus* callStatus )
{
	return cb(uniffi_handle, error, uniffi_out_return, callStatus );
}


#endif
#ifndef UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_ENTITY_UPDATE_CALLBACK
#define UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_ENTITY_UPDATE_CALLBACK
typedef struct UniffiVTableCallbackInterfaceEntityUpdateCallback {
    UniffiCallbackInterfaceEntityUpdateCallbackMethod0 onUpdate;
    UniffiCallbackInterfaceEntityUpdateCallbackMethod1 onError;
    UniffiCallbackInterfaceFree uniffiFree;
} UniffiVTableCallbackInterfaceEntityUpdateCallback;

#endif
#ifndef UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_EVENT_UPDATE_CALLBACK
#define UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_EVENT_UPDATE_CALLBACK
typedef struct UniffiVTableCallbackInterfaceEventUpdateCallback {
    UniffiCallbackInterfaceEventUpdateCallbackMethod0 onUpdate;
    UniffiCallbackInterfaceEventUpdateCallbackMethod1 onError;
    UniffiCallbackInterfaceFree uniffiFree;
} UniffiVTableCallbackInterfaceEventUpdateCallback;

#endif
#ifndef UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_TOKEN_BALANCE_UPDATE_CALLBACK
#define UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_TOKEN_BALANCE_UPDATE_CALLBACK
typedef struct UniffiVTableCallbackInterfaceTokenBalanceUpdateCallback {
    UniffiCallbackInterfaceTokenBalanceUpdateCallbackMethod0 onUpdate;
    UniffiCallbackInterfaceTokenBalanceUpdateCallbackMethod1 onError;
    UniffiCallbackInterfaceFree uniffiFree;
} UniffiVTableCallbackInterfaceTokenBalanceUpdateCallback;

#endif
#ifndef UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_TOKEN_UPDATE_CALLBACK
#define UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_TOKEN_UPDATE_CALLBACK
typedef struct UniffiVTableCallbackInterfaceTokenUpdateCallback {
    UniffiCallbackInterfaceTokenUpdateCallbackMethod0 onUpdate;
    UniffiCallbackInterfaceTokenUpdateCallbackMethod1 onError;
    UniffiCallbackInterfaceFree uniffiFree;
} UniffiVTableCallbackInterfaceTokenUpdateCallback;

#endif
#ifndef UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_TRANSACTION_UPDATE_CALLBACK
#define UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_TRANSACTION_UPDATE_CALLBACK
typedef struct UniffiVTableCallbackInterfaceTransactionUpdateCallback {
    UniffiCallbackInterfaceTransactionUpdateCallbackMethod0 onUpdate;
    UniffiCallbackInterfaceTransactionUpdateCallbackMethod1 onError;
    UniffiCallbackInterfaceFree uniffiFree;
} UniffiVTableCallbackInterfaceTransactionUpdateCallback;

#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_CLONE_TORIICLIENT
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_CLONE_TORIICLIENT
void* uniffi_dojo_uniffi_fn_clone_toriiclient(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_FREE_TORIICLIENT
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_FREE_TORIICLIENT
void uniffi_dojo_uniffi_fn_free_toriiclient(void* ptr, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_CONSTRUCTOR_TORIICLIENT_NEW
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_CONSTRUCTOR_TORIICLIENT_NEW
void* uniffi_dojo_uniffi_fn_constructor_toriiclient_new(RustBuffer torii_url, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_CONSTRUCTOR_TORIICLIENT_NEW_WITH_CONFIG
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_CONSTRUCTOR_TORIICLIENT_NEW_WITH_CONFIG
void* uniffi_dojo_uniffi_fn_constructor_toriiclient_new_with_config(RustBuffer torii_url, uint64_t max_message_size, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_ACHIEVEMENTS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_ACHIEVEMENTS
RustBuffer uniffi_dojo_uniffi_fn_method_toriiclient_achievements(void* ptr, RustBuffer query, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_ACTIVITIES
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_ACTIVITIES
RustBuffer uniffi_dojo_uniffi_fn_method_toriiclient_activities(void* ptr, RustBuffer query, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_AGGREGATIONS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_AGGREGATIONS
RustBuffer uniffi_dojo_uniffi_fn_method_toriiclient_aggregations(void* ptr, RustBuffer query, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_CANCEL_SUBSCRIPTION
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_CANCEL_SUBSCRIPTION
void uniffi_dojo_uniffi_fn_method_toriiclient_cancel_subscription(void* ptr, uint64_t subscription_id, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_CONTRACTS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_CONTRACTS
RustBuffer uniffi_dojo_uniffi_fn_method_toriiclient_contracts(void* ptr, RustBuffer query, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_CONTROLLERS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_CONTROLLERS
RustBuffer uniffi_dojo_uniffi_fn_method_toriiclient_controllers(void* ptr, RustBuffer query, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_ENTITIES
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_ENTITIES
RustBuffer uniffi_dojo_uniffi_fn_method_toriiclient_entities(void* ptr, RustBuffer query, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_EVENT_MESSAGES
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_EVENT_MESSAGES
RustBuffer uniffi_dojo_uniffi_fn_method_toriiclient_event_messages(void* ptr, RustBuffer query, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_PLAYER_ACHIEVEMENTS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_PLAYER_ACHIEVEMENTS
RustBuffer uniffi_dojo_uniffi_fn_method_toriiclient_player_achievements(void* ptr, RustBuffer query, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_PUBLISH_MESSAGE
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_PUBLISH_MESSAGE
RustBuffer uniffi_dojo_uniffi_fn_method_toriiclient_publish_message(void* ptr, RustBuffer message, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_PUBLISH_MESSAGE_BATCH
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_PUBLISH_MESSAGE_BATCH
RustBuffer uniffi_dojo_uniffi_fn_method_toriiclient_publish_message_batch(void* ptr, RustBuffer messages, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_SQL
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_SQL
RustBuffer uniffi_dojo_uniffi_fn_method_toriiclient_sql(void* ptr, RustBuffer query, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_STARKNET_EVENTS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_STARKNET_EVENTS
RustBuffer uniffi_dojo_uniffi_fn_method_toriiclient_starknet_events(void* ptr, RustBuffer query, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_SUBSCRIBE_ENTITY_UPDATES
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_SUBSCRIBE_ENTITY_UPDATES
uint64_t uniffi_dojo_uniffi_fn_method_toriiclient_subscribe_entity_updates(void* ptr, RustBuffer clause, RustBuffer world_addresses, uint64_t callback, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_SUBSCRIBE_EVENT_UPDATES
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_SUBSCRIBE_EVENT_UPDATES
uint64_t uniffi_dojo_uniffi_fn_method_toriiclient_subscribe_event_updates(void* ptr, RustBuffer keys, uint64_t callback, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_SUBSCRIBE_TOKEN_BALANCE_UPDATES
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_SUBSCRIBE_TOKEN_BALANCE_UPDATES
uint64_t uniffi_dojo_uniffi_fn_method_toriiclient_subscribe_token_balance_updates(void* ptr, RustBuffer contract_addresses, RustBuffer account_addresses, RustBuffer token_ids, uint64_t callback, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_SUBSCRIBE_TOKEN_UPDATES
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_SUBSCRIBE_TOKEN_UPDATES
uint64_t uniffi_dojo_uniffi_fn_method_toriiclient_subscribe_token_updates(void* ptr, RustBuffer contract_addresses, RustBuffer token_ids, uint64_t callback, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_SUBSCRIBE_TRANSACTION_UPDATES
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_SUBSCRIBE_TRANSACTION_UPDATES
uint64_t uniffi_dojo_uniffi_fn_method_toriiclient_subscribe_transaction_updates(void* ptr, RustBuffer filter, uint64_t callback, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_TOKEN_BALANCES
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_TOKEN_BALANCES
RustBuffer uniffi_dojo_uniffi_fn_method_toriiclient_token_balances(void* ptr, RustBuffer query, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_TOKEN_CONTRACTS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_TOKEN_CONTRACTS
RustBuffer uniffi_dojo_uniffi_fn_method_toriiclient_token_contracts(void* ptr, RustBuffer query, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_TOKEN_TRANSFERS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_TOKEN_TRANSFERS
RustBuffer uniffi_dojo_uniffi_fn_method_toriiclient_token_transfers(void* ptr, RustBuffer query, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_TOKENS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_TOKENS
RustBuffer uniffi_dojo_uniffi_fn_method_toriiclient_tokens(void* ptr, RustBuffer query, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_TRANSACTIONS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_TRANSACTIONS
RustBuffer uniffi_dojo_uniffi_fn_method_toriiclient_transactions(void* ptr, RustBuffer query, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_WORLDS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_METHOD_TORIICLIENT_WORLDS
RustBuffer uniffi_dojo_uniffi_fn_method_toriiclient_worlds(void* ptr, RustBuffer world_addresses, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_INIT_CALLBACK_VTABLE_ENTITYUPDATECALLBACK
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_INIT_CALLBACK_VTABLE_ENTITYUPDATECALLBACK
void uniffi_dojo_uniffi_fn_init_callback_vtable_entityupdatecallback(UniffiVTableCallbackInterfaceEntityUpdateCallback* vtable
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_INIT_CALLBACK_VTABLE_EVENTUPDATECALLBACK
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_INIT_CALLBACK_VTABLE_EVENTUPDATECALLBACK
void uniffi_dojo_uniffi_fn_init_callback_vtable_eventupdatecallback(UniffiVTableCallbackInterfaceEventUpdateCallback* vtable
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_INIT_CALLBACK_VTABLE_TOKENBALANCEUPDATECALLBACK
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_INIT_CALLBACK_VTABLE_TOKENBALANCEUPDATECALLBACK
void uniffi_dojo_uniffi_fn_init_callback_vtable_tokenbalanceupdatecallback(UniffiVTableCallbackInterfaceTokenBalanceUpdateCallback* vtable
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_INIT_CALLBACK_VTABLE_TOKENUPDATECALLBACK
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_INIT_CALLBACK_VTABLE_TOKENUPDATECALLBACK
void uniffi_dojo_uniffi_fn_init_callback_vtable_tokenupdatecallback(UniffiVTableCallbackInterfaceTokenUpdateCallback* vtable
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_INIT_CALLBACK_VTABLE_TRANSACTIONUPDATECALLBACK
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_FN_INIT_CALLBACK_VTABLE_TRANSACTIONUPDATECALLBACK
void uniffi_dojo_uniffi_fn_init_callback_vtable_transactionupdatecallback(UniffiVTableCallbackInterfaceTransactionUpdateCallback* vtable
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUSTBUFFER_ALLOC
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUSTBUFFER_ALLOC
RustBuffer ffi_dojo_uniffi_rustbuffer_alloc(uint64_t size, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUSTBUFFER_FROM_BYTES
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUSTBUFFER_FROM_BYTES
RustBuffer ffi_dojo_uniffi_rustbuffer_from_bytes(ForeignBytes bytes, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUSTBUFFER_FREE
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUSTBUFFER_FREE
void ffi_dojo_uniffi_rustbuffer_free(RustBuffer buf, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUSTBUFFER_RESERVE
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUSTBUFFER_RESERVE
RustBuffer ffi_dojo_uniffi_rustbuffer_reserve(RustBuffer buf, uint64_t additional, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_U8
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_U8
void ffi_dojo_uniffi_rust_future_poll_u8(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_U8
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_U8
void ffi_dojo_uniffi_rust_future_cancel_u8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_U8
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_U8
void ffi_dojo_uniffi_rust_future_free_u8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_U8
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_U8
uint8_t ffi_dojo_uniffi_rust_future_complete_u8(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_I8
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_I8
void ffi_dojo_uniffi_rust_future_poll_i8(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_I8
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_I8
void ffi_dojo_uniffi_rust_future_cancel_i8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_I8
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_I8
void ffi_dojo_uniffi_rust_future_free_i8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_I8
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_I8
int8_t ffi_dojo_uniffi_rust_future_complete_i8(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_U16
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_U16
void ffi_dojo_uniffi_rust_future_poll_u16(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_U16
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_U16
void ffi_dojo_uniffi_rust_future_cancel_u16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_U16
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_U16
void ffi_dojo_uniffi_rust_future_free_u16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_U16
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_U16
uint16_t ffi_dojo_uniffi_rust_future_complete_u16(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_I16
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_I16
void ffi_dojo_uniffi_rust_future_poll_i16(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_I16
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_I16
void ffi_dojo_uniffi_rust_future_cancel_i16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_I16
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_I16
void ffi_dojo_uniffi_rust_future_free_i16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_I16
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_I16
int16_t ffi_dojo_uniffi_rust_future_complete_i16(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_U32
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_U32
void ffi_dojo_uniffi_rust_future_poll_u32(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_U32
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_U32
void ffi_dojo_uniffi_rust_future_cancel_u32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_U32
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_U32
void ffi_dojo_uniffi_rust_future_free_u32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_U32
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_U32
uint32_t ffi_dojo_uniffi_rust_future_complete_u32(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_I32
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_I32
void ffi_dojo_uniffi_rust_future_poll_i32(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_I32
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_I32
void ffi_dojo_uniffi_rust_future_cancel_i32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_I32
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_I32
void ffi_dojo_uniffi_rust_future_free_i32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_I32
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_I32
int32_t ffi_dojo_uniffi_rust_future_complete_i32(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_U64
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_U64
void ffi_dojo_uniffi_rust_future_poll_u64(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_U64
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_U64
void ffi_dojo_uniffi_rust_future_cancel_u64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_U64
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_U64
void ffi_dojo_uniffi_rust_future_free_u64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_U64
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_U64
uint64_t ffi_dojo_uniffi_rust_future_complete_u64(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_I64
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_I64
void ffi_dojo_uniffi_rust_future_poll_i64(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_I64
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_I64
void ffi_dojo_uniffi_rust_future_cancel_i64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_I64
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_I64
void ffi_dojo_uniffi_rust_future_free_i64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_I64
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_I64
int64_t ffi_dojo_uniffi_rust_future_complete_i64(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_F32
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_F32
void ffi_dojo_uniffi_rust_future_poll_f32(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_F32
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_F32
void ffi_dojo_uniffi_rust_future_cancel_f32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_F32
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_F32
void ffi_dojo_uniffi_rust_future_free_f32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_F32
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_F32
float ffi_dojo_uniffi_rust_future_complete_f32(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_F64
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_F64
void ffi_dojo_uniffi_rust_future_poll_f64(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_F64
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_F64
void ffi_dojo_uniffi_rust_future_cancel_f64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_F64
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_F64
void ffi_dojo_uniffi_rust_future_free_f64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_F64
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_F64
double ffi_dojo_uniffi_rust_future_complete_f64(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_POINTER
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_POINTER
void ffi_dojo_uniffi_rust_future_poll_pointer(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_POINTER
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_POINTER
void ffi_dojo_uniffi_rust_future_cancel_pointer(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_POINTER
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_POINTER
void ffi_dojo_uniffi_rust_future_free_pointer(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_POINTER
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_POINTER
void* ffi_dojo_uniffi_rust_future_complete_pointer(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_RUST_BUFFER
void ffi_dojo_uniffi_rust_future_poll_rust_buffer(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_RUST_BUFFER
void ffi_dojo_uniffi_rust_future_cancel_rust_buffer(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_RUST_BUFFER
void ffi_dojo_uniffi_rust_future_free_rust_buffer(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_RUST_BUFFER
RustBuffer ffi_dojo_uniffi_rust_future_complete_rust_buffer(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_VOID
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_POLL_VOID
void ffi_dojo_uniffi_rust_future_poll_void(uint64_t handle, UniffiRustFutureContinuationCallback callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_VOID
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_CANCEL_VOID
void ffi_dojo_uniffi_rust_future_cancel_void(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_VOID
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_FREE_VOID
void ffi_dojo_uniffi_rust_future_free_void(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_VOID
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_RUST_FUTURE_COMPLETE_VOID
void ffi_dojo_uniffi_rust_future_complete_void(uint64_t handle, RustCallStatus *out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_ACHIEVEMENTS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_ACHIEVEMENTS
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_achievements(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_ACTIVITIES
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_ACTIVITIES
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_activities(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_AGGREGATIONS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_AGGREGATIONS
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_aggregations(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_CANCEL_SUBSCRIPTION
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_CANCEL_SUBSCRIPTION
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_cancel_subscription(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_CONTRACTS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_CONTRACTS
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_contracts(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_CONTROLLERS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_CONTROLLERS
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_controllers(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_ENTITIES
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_ENTITIES
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_entities(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_EVENT_MESSAGES
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_EVENT_MESSAGES
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_event_messages(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_PLAYER_ACHIEVEMENTS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_PLAYER_ACHIEVEMENTS
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_player_achievements(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_PUBLISH_MESSAGE
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_PUBLISH_MESSAGE
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_publish_message(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_PUBLISH_MESSAGE_BATCH
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_PUBLISH_MESSAGE_BATCH
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_publish_message_batch(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_SQL
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_SQL
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_sql(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_STARKNET_EVENTS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_STARKNET_EVENTS
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_starknet_events(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_SUBSCRIBE_ENTITY_UPDATES
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_SUBSCRIBE_ENTITY_UPDATES
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_subscribe_entity_updates(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_SUBSCRIBE_EVENT_UPDATES
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_SUBSCRIBE_EVENT_UPDATES
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_subscribe_event_updates(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_SUBSCRIBE_TOKEN_BALANCE_UPDATES
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_SUBSCRIBE_TOKEN_BALANCE_UPDATES
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_subscribe_token_balance_updates(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_SUBSCRIBE_TOKEN_UPDATES
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_SUBSCRIBE_TOKEN_UPDATES
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_subscribe_token_updates(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_SUBSCRIBE_TRANSACTION_UPDATES
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_SUBSCRIBE_TRANSACTION_UPDATES
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_subscribe_transaction_updates(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_TOKEN_BALANCES
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_TOKEN_BALANCES
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_token_balances(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_TOKEN_CONTRACTS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_TOKEN_CONTRACTS
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_token_contracts(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_TOKEN_TRANSFERS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_TOKEN_TRANSFERS
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_token_transfers(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_TOKENS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_TOKENS
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_tokens(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_TRANSACTIONS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_TRANSACTIONS
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_transactions(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_WORLDS
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TORIICLIENT_WORLDS
uint16_t uniffi_dojo_uniffi_checksum_method_toriiclient_worlds(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_CONSTRUCTOR_TORIICLIENT_NEW
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_CONSTRUCTOR_TORIICLIENT_NEW
uint16_t uniffi_dojo_uniffi_checksum_constructor_toriiclient_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_CONSTRUCTOR_TORIICLIENT_NEW_WITH_CONFIG
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_CONSTRUCTOR_TORIICLIENT_NEW_WITH_CONFIG
uint16_t uniffi_dojo_uniffi_checksum_constructor_toriiclient_new_with_config(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_ENTITYUPDATECALLBACK_ON_UPDATE
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_ENTITYUPDATECALLBACK_ON_UPDATE
uint16_t uniffi_dojo_uniffi_checksum_method_entityupdatecallback_on_update(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_ENTITYUPDATECALLBACK_ON_ERROR
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_ENTITYUPDATECALLBACK_ON_ERROR
uint16_t uniffi_dojo_uniffi_checksum_method_entityupdatecallback_on_error(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_EVENTUPDATECALLBACK_ON_UPDATE
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_EVENTUPDATECALLBACK_ON_UPDATE
uint16_t uniffi_dojo_uniffi_checksum_method_eventupdatecallback_on_update(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_EVENTUPDATECALLBACK_ON_ERROR
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_EVENTUPDATECALLBACK_ON_ERROR
uint16_t uniffi_dojo_uniffi_checksum_method_eventupdatecallback_on_error(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TOKENBALANCEUPDATECALLBACK_ON_UPDATE
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TOKENBALANCEUPDATECALLBACK_ON_UPDATE
uint16_t uniffi_dojo_uniffi_checksum_method_tokenbalanceupdatecallback_on_update(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TOKENBALANCEUPDATECALLBACK_ON_ERROR
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TOKENBALANCEUPDATECALLBACK_ON_ERROR
uint16_t uniffi_dojo_uniffi_checksum_method_tokenbalanceupdatecallback_on_error(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TOKENUPDATECALLBACK_ON_UPDATE
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TOKENUPDATECALLBACK_ON_UPDATE
uint16_t uniffi_dojo_uniffi_checksum_method_tokenupdatecallback_on_update(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TOKENUPDATECALLBACK_ON_ERROR
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TOKENUPDATECALLBACK_ON_ERROR
uint16_t uniffi_dojo_uniffi_checksum_method_tokenupdatecallback_on_error(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TRANSACTIONUPDATECALLBACK_ON_UPDATE
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TRANSACTIONUPDATECALLBACK_ON_UPDATE
uint16_t uniffi_dojo_uniffi_checksum_method_transactionupdatecallback_on_update(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TRANSACTIONUPDATECALLBACK_ON_ERROR
#define UNIFFI_FFIDEF_UNIFFI_DOJO_UNIFFI_CHECKSUM_METHOD_TRANSACTIONUPDATECALLBACK_ON_ERROR
uint16_t uniffi_dojo_uniffi_checksum_method_transactionupdatecallback_on_error(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_UNIFFI_CONTRACT_VERSION
#define UNIFFI_FFIDEF_FFI_DOJO_UNIFFI_UNIFFI_CONTRACT_VERSION
uint32_t ffi_dojo_uniffi_uniffi_contract_version(void
    
);
#endif

 void dojo_uniffi_cgo_dispatchCallbackInterfaceEntityUpdateCallbackMethod0(uint64_t uniffi_handle, RustBuffer entity, void* uniffi_out_return, RustCallStatus* callStatus );
 void dojo_uniffi_cgo_dispatchCallbackInterfaceEntityUpdateCallbackMethod1(uint64_t uniffi_handle, RustBuffer error, void* uniffi_out_return, RustCallStatus* callStatus );
 void dojo_uniffi_cgo_dispatchCallbackInterfaceEntityUpdateCallbackFree(uint64_t handle);
 void dojo_uniffi_cgo_dispatchCallbackInterfaceEventUpdateCallbackMethod0(uint64_t uniffi_handle, RustBuffer event, void* uniffi_out_return, RustCallStatus* callStatus );
 void dojo_uniffi_cgo_dispatchCallbackInterfaceEventUpdateCallbackMethod1(uint64_t uniffi_handle, RustBuffer error, void* uniffi_out_return, RustCallStatus* callStatus );
 void dojo_uniffi_cgo_dispatchCallbackInterfaceEventUpdateCallbackFree(uint64_t handle);
 void dojo_uniffi_cgo_dispatchCallbackInterfaceTokenBalanceUpdateCallbackMethod0(uint64_t uniffi_handle, RustBuffer balance, void* uniffi_out_return, RustCallStatus* callStatus );
 void dojo_uniffi_cgo_dispatchCallbackInterfaceTokenBalanceUpdateCallbackMethod1(uint64_t uniffi_handle, RustBuffer error, void* uniffi_out_return, RustCallStatus* callStatus );
 void dojo_uniffi_cgo_dispatchCallbackInterfaceTokenBalanceUpdateCallbackFree(uint64_t handle);
 void dojo_uniffi_cgo_dispatchCallbackInterfaceTokenUpdateCallbackMethod0(uint64_t uniffi_handle, RustBuffer token, void* uniffi_out_return, RustCallStatus* callStatus );
 void dojo_uniffi_cgo_dispatchCallbackInterfaceTokenUpdateCallbackMethod1(uint64_t uniffi_handle, RustBuffer error, void* uniffi_out_return, RustCallStatus* callStatus );
 void dojo_uniffi_cgo_dispatchCallbackInterfaceTokenUpdateCallbackFree(uint64_t handle);
 void dojo_uniffi_cgo_dispatchCallbackInterfaceTransactionUpdateCallbackMethod0(uint64_t uniffi_handle, RustBuffer transaction, void* uniffi_out_return, RustCallStatus* callStatus );
 void dojo_uniffi_cgo_dispatchCallbackInterfaceTransactionUpdateCallbackMethod1(uint64_t uniffi_handle, RustBuffer error, void* uniffi_out_return, RustCallStatus* callStatus );
 void dojo_uniffi_cgo_dispatchCallbackInterfaceTransactionUpdateCallbackFree(uint64_t handle);
